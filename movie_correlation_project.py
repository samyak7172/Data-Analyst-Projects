# -*- coding: utf-8 -*-
"""Movie Correlation Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dN4Z891JUxI_5cwzOGUVz15FQSO-7zrU
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import  seaborn as sns

import matplotlib
import matplotlib.pyplot as plt
plt.style.use('ggplot')
from matplotlib.pyplot import figure

# %matplotlib inline
matplotlib.rcParams['figure.figsize'] = (15,8) #plot configuration that we create

## reading the file
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/movies.csv')

df.sample(2)

## lets see for missing data
df.isnull().sum()

# % of missing data in each column
for col in df.columns:
  pct_missing = np.mean(df[col].isnull())
  print(f'{col} - {round(pct_missing,2)}%')

## checking datatypes of columns
df.dtypes

##dropping null values from budget and gross columns
# df1 = df.dropna(subset=['budget','gross'])
##changing datatypes
df1['budget'] = df1['budget'].astype('int64')

df1['gross'] = df1['gross'].astype('int64')

## Creating column of released country
df1['Released_Country'] = df1['released'].astype(str).apply(lambda x : x[x.find('(')+1:x.find(')')])

df1.sample(2)

# Creating correct released year column
# df.drop(['Release Year'],axis=1,inplace=True)
df1['Release Year'] = df1['released'].astype(str).apply(lambda x : x[x.find(',')+2:x.find(',')+7])

df1.sample(2)

pd.set_option('display.max_rows',None)
df1 = df1.sort_values(by=['gross'], inplace=False, ascending=False)

# drop any duplicates

# df.drop_duplicates()

"""## **Prediction**:- 

1.   regarding the budget more money they spent then more money they get---means budget has high correlation
2.   bigger company have higher correlation



"""

# Scatter plot with budget vs gross
plt.scatter(x=df1['budget'],y=df1['gross'])

plt.title('Budget vs Gross Earnings')

plt.xlabel('Gross Earnings')

plt.ylabel('Budget for film')

plt.show()

## regression plot for more deeper correlation part using seaborn

sns.regplot(x='budget',y='gross', data= df1, scatter_kws={"color":"black"},line_kws={"color":"blue"})

## lets look at correlation
df.corr() #work only on numerical data # pearson,kendall, spearman

## high correlation between budget and gross

correlation_matrix = df.corr(method = 'pearson') 

sns.heatmap(correlation_matrix,annot=True)

plt.title('Correlation Matrix for numeric Fetures')

plt.xlabel('Movie Features')

plt.ylabel('Movie Features')

plt.show()

df_numerized = df1

df_numerized.dtypes

## look at company---> company is non numeric

for col in df_numerized.columns:
  if(df_numerized[col].dtype == 'category'):
    df_numerized[col] = df_numerized[col].cat.codes

    # df_numerized[col] = df_numerized[col].astype('category')
    
df_numerized.sample(4)

## high correlation between budget and gross

correlation_matrix = df_numerized.corr(method = 'pearson') 

sns.heatmap(correlation_matrix,annot=True)

plt.title('Correlation Matrix for numeric Fetures')

plt.xlabel('Movie Features')

plt.ylabel('Movie Features')

plt.show()

correlation_mat = df_numerized.corr()

corr_pairs = correlation_mat.unstack()

corr_pairs

sorted_pairs = corr_pairs.sort_values()
sorted_pairs

high_corr = sorted_pairs[(sorted_pairs)>0.5]
high_corr

"""

1.  ## votes and gross have the highest correlation and 

2. ## comapany and gross has no correaltion at all  

"""